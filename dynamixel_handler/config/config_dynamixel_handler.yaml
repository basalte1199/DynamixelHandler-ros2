# /ns/dyn_handler:
/**:
    ros__parameters:
    # 通信機器の設定
        device_name: /dev/ttyUSB_dxl # 通信するデバイス名
        baudrate: 1000000 # 通信速度
        latency_timer: 16 # 通信のインターバル
    # サーボの設定
        init/dummy_servo_list: [-1] # ダミーのサーボを作成するIDのリスト,同じIDのサーボが存在する場合でもダミーが優先される． 255は無視される．
        init/baudrate_auto_set: false # 探索前に，全てのサーボと全てのBaudrateに対して，baudrateの書き込みをするかどうか
        init/uesd_servo_series: {X: true, P: false, Pro: false} # 使用するサーボのシリーズ
        init/expected_servo_num: 0
        init/servo_auto_search: {min_id: 1, max_id: 16, retry_times: 0} # サーボのIDを自動で探索するかどうか
        init/hardware_error_auto_clean: true # 初期化時に Hardware error を自動でクリアするかどうか
        init/torque_auto_enable: true # 初期化時に Torque を自動でONにするかどうか
        term/torque_auto_disable: true # 終了時に Torque を自動でOFFにするかどうか
        term/servo_auto_stop: true # 終了時に電流・速度制御のサーボを停止するかどうか
    # デフォルト値の設定
        default/profile_acc: 60.0 # deg/s^2
        default/profile_vel: 10.0 # deg/s
        default/return_delay_time: 0.0 # us [double]
    # ループの設定
        loop_rate: 100 # メインループの周期
        verbose_ratio: 300 # メインループのlog出力の割合(処理時間，通信の成功率), ex 100なら100回に1回出力
        pub_outdated_present_value: true # 最新でないpresent_XXXをpublishするかどうか. false ならば 直近のループでreadした Present の要素のみmsgに含められる．
        pub_ratio/present: # present_XXXを読み取る割合
            pwm:                  10 # この回数に一回present_pwmを読み取る
            current:              1 # この回数に一回present_currentを読み取る
            velocity:             10 # この回数に一回present_velocityを読み取る
            position:             1 # この回数に一回present_positionを読み取る
            velocity_trajectory:  1 # この回数に一回velocity_trajectoryを読み取る
            position_trajectory:  1 # この回数に一回position_trajectoryを読み取る
            input_voltage:       29 # この回数に一回present_input_voltageを読み取る
            temperature:         29 # この回数に一回present_temperatureを読み取る
        pub_ratio/status: 47 # この回数に一回 Status を読み取る, 0=初回のみ
        pub_ratio/goal:   11 # この回数に一回 Goal を読み取る, 0=初回のみ
        pub_ratio/gain:  101 # この回数に一回 Gain を読み取る, 0=初回のみ
        pub_ratio/limit: 307 # この回数に一回 Limit を読み取る, 0=初回のみ
        pub_ratio/error:  53 # この回数に一回 Hardware error を読み取る, 0=初回のみ
    # Read/Write方式
        method/fast_read: false
        method/split_read: false
        method/split_write: true
    # Optonal機能
        option/external_port:
            use: false # External Portの機能を使うかどうか
            pub_ratio/data: 10  # この回数に一回 Data を読み取る.
            pub_ratio/mode: 100 # この回数に一回 Mode を読み取る, ROM値なので大きくても問題ない．
            verbose/callback: false
            verbose/write:    false
            verbose/read:     {raw: false, err: false}
    # デバッグ用
        max_log_width: 6
        verbose/callback: true
        verbose/write_status: false
        verbose/write_goal:   false
        verbose/write_gain:   false
        verbose/write_limit:  false
        verbose/read_status:  {raw: false, err: false}
        verbose/read_present: {raw: false, err: false}
        verbose/read_goal:    {raw: false, err: false}
        verbose/read_gain:    {raw: false, err: false}
        verbose/read_limit:   {raw: false, err: false}
        verbose/read_hardware_error: true
    # 通信の設定
        dyn_comm/retry_num: 5
        dyn_comm/inerval_msec: 4
        dyn_comm/verbose: false
    # 開発用
        debug: false # true: デバイスとの接続に失敗してもエラーを出力しない/ false: エラーを出力して終了する
        no_use_command_line: false # true: プログラム用のトピックのみ使用する/ false: コマンドライン用のトピックも出力する
